module Parse
  grammar EmailChain
    include MetaSection
    include Lexical

    rule email_chain
      SS? 
      (message_metadata (message <MessageNode>) / forward_header)
    end

    rule forward_header
      line?
      subject_header
    end

    rule subject_header
      "Subject: " line 
    end

    rule separator
      "------" line
    end

    rule signature_delimiter
      "--" endl <SignatureDelimiter>
    end

    rule quote_header
      quote_pre 1..2 SS? &quote_line <QuoteHeader>
    end

    rule quote_pre
      !quote_prefix line
    end

    rule quote_line
      quote_prefix line <QuoteNode>
    end

    rule quote_prefix
      S? [>]+ S?
    end

    rule freeform_line
      '' line <MessageLineNode>
    end
    # Herpderp revelation, I finally understand how to properly
    # deconstruct the message without everything being swallowed
    # into some huge greedy match
    #
    # This is the key.
    rule message
      quote_header message /
      quote_line message /
      signature_delimiter message /
      freeform_line message /
      SS message /
      eof_line # Consume any nonsense remaining
    end
  end
end
